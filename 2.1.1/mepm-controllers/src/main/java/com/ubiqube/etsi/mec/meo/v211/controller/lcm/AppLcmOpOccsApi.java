/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ubiqube.etsi.mec.meo.v211.controller.lcm;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.ubiqube.etsi.mec.meo.v211.model.lcm.AppInstanceLcmOpOcc;
import com.ubiqube.etsi.mec.meo.v211.model.lcm.ProblemDetails;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@Api(value = "app_lcm_op_occs", description = "the app_lcm_op_occs API")
public interface AppLcmOpOccsApi {

    @ApiOperation(value = "retrieves information of operation status about multiple application instance lifecycle management operation occurrences", nickname = "appLcmOpOccsGET", notes = "retrieves information of operation status about multiple application instance lifecycle management operation occurrences", response = AppInstanceLcmOpOcc.class, responseContainer = "List", tags = { "", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Status information for zero or more application instance lifecycle management operation occurrences was queried successfully", response = AppInstanceLcmOpOcc.class, responseContainer = "List"),
            @ApiResponse(code = 400, message = "Bad Request : used to indicate that incorrect parameters were passed to the request.", response = ProblemDetails.class),
            @ApiResponse(code = 401, message = "Unauthorized :  used when the client did not submit credentials.", response = ProblemDetails.class),
            @ApiResponse(code = 403, message = "Forbidden :  operation is not allowed given the current status of the resource.", response = ProblemDetails.class),
            @ApiResponse(code = 404, message = "Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.", response = ProblemDetails.class),
            @ApiResponse(code = 406, message = "Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.", response = ProblemDetails.class),
            @ApiResponse(code = 429, message = "Too Many Requests : used when a rate limiter has triggered.", response = ProblemDetails.class) })
    @RequestMapping(value = "/app_lcm_op_occs", produces = { "application/json" }, method = RequestMethod.GET)
    ResponseEntity<List<AppInstanceLcmOpOcc>> appLcmOpOccsGET(@ApiParam(value = "Attribute-based filtering parameters according to ETSI GS MEC 009") @Valid @RequestParam(value = "filter", required = false) String filter, @ApiParam(value = "Include all complex attributes in the response.") @Valid @RequestParam(value = "all_fields", required = false) String allFields, @ApiParam(value = "Complex attributes of AppPkgInfo to be included into the response") @Valid @RequestParam(value = "fields", required = false) String fields, @ApiParam(value = "Complex attributes of AppPkgInfo to be excluded from the response.") @Valid @RequestParam(value = "exclude_fields", required = false) String excludeFields, @ApiParam(value = "Indicates to exclude the following complex attributes of AppPkgInfo from the response.") @Valid @RequestParam(value = "exclude_default", required = false) String excludeDefault);

    @ApiOperation(value = "reads the status information of an individual application LCM operation occurrence", nickname = "appLcmOpOccsbyIdGET", notes = "reads the status information of an individual application LCM operation occurrence", response = AppInstanceLcmOpOcc.class, tags = { "", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Information about an application LCM operation occurrence was read successfully", response = AppInstanceLcmOpOcc.class),
            @ApiResponse(code = 400, message = "Bad Request : used to indicate that incorrect parameters were passed to the request.", response = ProblemDetails.class),
            @ApiResponse(code = 401, message = "Unauthorized :  used when the client did not submit credentials.", response = ProblemDetails.class),
            @ApiResponse(code = 403, message = "Forbidden :  operation is not allowed given the current status of the resource.", response = ProblemDetails.class),
            @ApiResponse(code = 404, message = "Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.", response = ProblemDetails.class),
            @ApiResponse(code = 406, message = "Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.", response = ProblemDetails.class),
            @ApiResponse(code = 429, message = "Too Many Requests : used when a rate limiter has triggered.", response = ProblemDetails.class) })
    @RequestMapping(value = "/app_lcm_op_occs/{appLcmOpOccId}", produces = { "application/json" }, method = RequestMethod.GET)
    ResponseEntity<AppInstanceLcmOpOcc> appLcmOpOccsbyIdGET(@ApiParam(value = "Identifies an individual application LCM operation occurrence", required = true) @PathVariable("appLcmOpOccId") String appLcmOpOccId);

}
